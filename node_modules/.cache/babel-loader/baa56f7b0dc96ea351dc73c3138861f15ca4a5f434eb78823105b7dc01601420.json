{"ast":null,"code":"var _jsxFileName = \"/var/www/html/lenguajes/react/entregaProyecto/src/components/CartItemListContainer/CartItemListContainer.jsx\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect } from \"react\";\nimport { Contexto } from \"../../Context/Context\";\nimport CartItemList from \"./CartItemList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CartItemListContainer() {\n  _s();\n  const items = useContext(Contexto).count;\n  const {\n    count,\n    setCount\n  } = useContext(Contexto);\n  let newList = [];\n  for (let i = 0; i < items.length; i++) {\n    let itemActual = {\n      amount: 0,\n      ...items[i]\n    };\n    for (let k = 0; k < items.length; k++) {\n      if (itemActual.id == items[k].id) {\n        itemActual.amount++;\n      }\n    }\n    newList.push(itemActual);\n  }\n  let defList = [...newList];\n  for (let i = 0; i < defList.length; i++) {\n    let actualItem = defList[i].id;\n    for (let k = 0; k < newList.length; k++) {\n      let tempItem = newList[k].id;\n      if (actualItem == tempItem) {\n        defList.splice(i, 1);\n        break;\n      }\n    }\n  }\n\n  // useEffect(() => {\n  //     setFilteredCart(defList)\n  // }, []);\n  // console.log(filteredCart)\n\n  let totalPrice = 0;\n  for (let i = 0; i < defList.length; i++) {\n    totalPrice += defList[i].price * defList[i].amount;\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"Cart\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CartItemList, {\n      totalPrice: totalPrice,\n      items: defList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(CartItemListContainer, \"76WC5bQu4tuxiImTdOwQrL4IWlI=\");\n_c = CartItemListContainer;\nvar _c;\n$RefreshReg$(_c, \"CartItemListContainer\");","map":{"version":3,"names":["useContext","useEffect","Contexto","CartItemList","jsxDEV","_jsxDEV","CartItemListContainer","_s","items","count","setCount","newList","i","length","itemActual","amount","k","id","push","defList","actualItem","tempItem","splice","totalPrice","price","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/var/www/html/lenguajes/react/entregaProyecto/src/components/CartItemListContainer/CartItemListContainer.jsx"],"sourcesContent":["import { useContext, useEffect } from \"react\";\nimport { Contexto } from \"../../Context/Context\";\nimport CartItemList from \"./CartItemList\";\n\nexport default function CartItemListContainer() {\n\n    const items = useContext(Contexto).count;\n\n    const { count, setCount } = useContext(Contexto);\n\n    let newList = [];\n    for (let i = 0; i < items.length; i++) {\n        let itemActual = {amount: 0, ...items[i]};\n        for (let k = 0; k < items.length; k++) {\n            if (itemActual.id == items[k].id)\n            {\n                itemActual.amount++;\n            }\n        }\n        newList.push(itemActual);\n    }\n\n    let defList = [...newList]\n    for (let i = 0; i < defList.length; i++) {\n        let actualItem = defList[i].id;\n        for (let k = 0; k < newList.length; k++) {\n            let tempItem = newList[k].id\n            if (actualItem == tempItem) {\n                defList.splice(i, 1);\n                break;\n            }\n        }\n    }\n\n    // useEffect(() => {\n    //     setFilteredCart(defList)\n    // }, []);\n    // console.log(filteredCart)\n\n    let totalPrice = 0;\n    for (let i = 0; i < defList.length; i++) {\n        totalPrice += defList[i].price * defList[i].amount;\n    }\n\n    return (\n        <section className=\"Cart\">\n            <h1>Cart</h1>\n            <CartItemList totalPrice={totalPrice} items={defList}/>\n        </section>\n    )\n}"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7C,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,eAAe,SAASC,qBAAqBA,CAAA,EAAG;EAAAC,EAAA;EAE5C,MAAMC,KAAK,GAAGR,UAAU,CAACE,QAAQ,CAAC,CAACO,KAAK;EAExC,MAAM;IAAEA,KAAK;IAAEC;EAAS,CAAC,GAAGV,UAAU,CAACE,QAAQ,CAAC;EAEhD,IAAIS,OAAO,GAAG,EAAE;EAChB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,KAAK,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;IACnC,IAAIE,UAAU,GAAG;MAACC,MAAM,EAAE,CAAC;MAAE,GAAGP,KAAK,CAACI,CAAC;IAAC,CAAC;IACzC,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,KAAK,CAACK,MAAM,EAAEG,CAAC,EAAE,EAAE;MACnC,IAAIF,UAAU,CAACG,EAAE,IAAIT,KAAK,CAACQ,CAAC,CAAC,CAACC,EAAE,EAChC;QACIH,UAAU,CAACC,MAAM,EAAE;MACvB;IACJ;IACAJ,OAAO,CAACO,IAAI,CAACJ,UAAU,CAAC;EAC5B;EAEA,IAAIK,OAAO,GAAG,CAAC,GAAGR,OAAO,CAAC;EAC1B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGO,OAAO,CAACN,MAAM,EAAED,CAAC,EAAE,EAAE;IACrC,IAAIQ,UAAU,GAAGD,OAAO,CAACP,CAAC,CAAC,CAACK,EAAE;IAC9B,KAAK,IAAID,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,OAAO,CAACE,MAAM,EAAEG,CAAC,EAAE,EAAE;MACrC,IAAIK,QAAQ,GAAGV,OAAO,CAACK,CAAC,CAAC,CAACC,EAAE;MAC5B,IAAIG,UAAU,IAAIC,QAAQ,EAAE;QACxBF,OAAO,CAACG,MAAM,CAACV,CAAC,EAAE,CAAC,CAAC;QACpB;MACJ;IACJ;EACJ;;EAEA;EACA;EACA;EACA;;EAEA,IAAIW,UAAU,GAAG,CAAC;EAClB,KAAK,IAAIX,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGO,OAAO,CAACN,MAAM,EAAED,CAAC,EAAE,EAAE;IACrCW,UAAU,IAAIJ,OAAO,CAACP,CAAC,CAAC,CAACY,KAAK,GAAGL,OAAO,CAACP,CAAC,CAAC,CAACG,MAAM;EACtD;EAEA,oBACIV,OAAA;IAASoB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACrBrB,OAAA;MAAAqB,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACbzB,OAAA,CAACF,YAAY;MAACoB,UAAU,EAAEA,UAAW;MAACf,KAAK,EAAEW;IAAQ;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAElB;AAACvB,EAAA,CA9CuBD,qBAAqB;AAAAyB,EAAA,GAArBzB,qBAAqB;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}